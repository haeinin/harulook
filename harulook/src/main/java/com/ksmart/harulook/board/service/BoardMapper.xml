<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ksmart.harulook.board.service.BoardMapper">
	<resultMap type="com.ksmart.harulook.board.service.BoardDto" id="board">
		<result property="snsBoardNo" column="sns_board_no"/>
		<result property="userId" column="user_id"/>
		<result property="snsBoardImg" column="sns_board_img"/>
		<result property="snsBoardContent" column="sns_board_content"/>
		<result property="snsBoardWeather" column="sns_board_weather"/>
		<result property="snsBoardTall" column="sns_board_tall"/>
		<result property="snsBoardSize" column="sns_board_size"/>
		<result property="snsBoardLoc" column="sns_board_loc"/>
		<result property="snsBoardDate" column="sns_board_date"/>
		<result property="snsBoardGender" column="sns_board_gender"/>
		<result property="snsBoardAge" column="sns_board_age"/>
		<result property="userNick" column="nick"/>
	</resultMap>
	
	<!-- 포인트등록 게시물 검색 -->
	<select id="boardPointCheck" parameterType="String" resultType="int">
		SELECT count(sns_board_no) sns_board_no
		FROM sns_board
		WHERE user_id = #{userId}
		AND sns_board_date = date(now())
		;
	</select>
	
	<!-- sns게시물 검색 -->
	<select id="boardSearchList" parameterType="com.ksmart.harulook.board.service.BoardDto" resultMap="board">
		SELECT
			sns_board.sns_board_no
			,sns_board.sns_board_img
			,sns_board.sns_board_date
			,댓글수 AS snsCommentCount
			,추천수 AS snsLikeCount
		FROM sns_board
			 ,(
			 SELECT 
			  b.sns_board_no
			  ,count(c.sns_comment_no) 댓글수
			 FROM sns_board b
			 LEFT JOIN sns_comment c
			 ON c.sns_board_no = b.sns_board_no
			 GROUP BY b.sns_board_no
			 ) AS cc
			 ,(
			 SELECT
				  b.sns_board_no
				  ,count(l.sns_like_no) 추천수
			 FROM sns_board b
			 LEFT JOIN sns_like l
			 ON l.sns_board_no = b.sns_board_no
			 GROUP BY b.sns_board_no
			 ) AS lc
			 <if test="situationValue != null">
			  ,(
			 SELECT sns_board_no 
			 FROM sns_situation
			 <trim prefix="WHERE" prefixOverrides="AND|OR">
			 	OR situation_no IN (
			 	<foreach collection="situationValue" item="situationValue" separator=",">#{situationValue}</foreach>
			 	)
			 </trim>
			 ) AS ssit
			 </if>
			 <if test="styleValue != null">
			   , (
			 SELECT sns_board_no 
			 FROM sns_style
			 <trim prefix="WHERE" prefixOverrides="AND|OR">
			 OR style_no IN (
			 	<foreach collection="styleValue" item="styleValue" separator=",">#{styleValue}</foreach>
			 	)
			 </trim>
			 ) AS ss
			 </if>
			 <if test="colorValue != null">
			   , (
			 SELECT sns_board_no 
			 FROM sns_color
			 <trim prefix="WHERE" prefixOverrides="AND|OR">
			 OR color_no IN (
			 	<foreach collection="colorValue" item="colorValue" separator=",">#{colorValue}</foreach>
			 	)
			 </trim>
			 ) AS sc
			 </if>
		WHERE sns_board.sns_board_no = cc.sns_board_no 
		AND sns_board.sns_board_no = lc.sns_board_no
		<if test="situationValue != null">
			AND sns_board.sns_board_no = ssit.sns_board_no
		</if>
		<if test="styleValue != null">
			AND sns_board.sns_board_no = ss.sns_board_no
		</if>
		<if test="colorValue != null">
			AND sns_board.sns_board_no = sc.sns_board_no
		</if>
		<if test="snsBoardWeather != null">
			AND sns_board.sns_board_weather = #{snsBoardWeather}
		</if>
		<if test="snsBoardLoc != null">
			AND sns_board.sns_board_loc = #{snsBoardLoc}
		</if>
		<if test="snsBoardTall != null">
			AND sns_board.sns_board_tall = #{snsBoardTall}
		</if>
		<if test="snsBoardSize != null">
			AND sns_board.sns_board_size = #{snsBoardSize}
		</if>
		<if test="snsBoardGender != null">
			AND sns_board.sns_board_gender = #{snsBoardGender}
		</if>
		<if test="snsBoardAge != null">
			AND sns_board.sns_board_age = #{snsBoardAge}
		</if>
		<if test="userId != null">
			AND sns_board.user_id = #{userId}
		</if>
		GROUP BY sns_board.sns_board_no 
		ORDER BY sns_board.sns_board_no DESC
	</select>
	
	<!-- sns게시물 상황별 분류 삭제 -->
	<delete id="snsSituationDelete" parameterType="String">
		DELETE 
		FROM sns_situation 
		WHERE sns_board_no = #{snsBoardNo};
	</delete>
	
	<!-- sns게시물 스타일 삭제 -->
	<delete id="snsStyleDelete" parameterType="String">
		DELETE 
		FROM sns_style 
		WHERE sns_board_no = #{snsBoardNo};
	</delete>
	
	<!-- sns게시물 색상 삭제 -->
	<delete id="snsColorDelete" parameterType="String">
		DELETE 
		FROM sns_color 
		WHERE sns_board_no = #{snsBoardNo};
	</delete>
	
	<!-- sns게시물 삭제 -->
	<delete id="boardDelete" parameterType="String">
		DELETE 
		FROM sns_board 
		WHERE sns_board_no = #{snsBoardNo}
	</delete>
	
	<!-- sns게시물 정보 수정 -->
	<update id="boardUpdate" parameterType="com.ksmart.harulook.board.service.BoardDto">
		UPDATE sns_board
		SET
			sns_board_content = #{snsBoardContent}
			,sns_board_weather = #{snsBoardWeather}
			,sns_board_tall = #{snsBoardTall}
			,sns_board_size = #{snsBoardSize}
			,sns_board_loc = #{snsBoardLoc}
			,sns_board_gender = #{snsBoardGender}
			,sns_board_age = #{snsBoardAge}
		WHERE sns_board_no = #{snsBoardNo}
	</update>
	
	<!-- sns게시물 상황별 분류 조회 -->
	<select id="boardSituationSelect" parameterType="String" resultType="String">
		SELECT situation.situation_value
		FROM sns_board
		JOIN sns_situation
		ON sns_board.sns_board_no = sns_situation.sns_board_no
		JOIN situation
		ON situation.situation_no = sns_situation.situation_no 
		WHERE sns_board.sns_board_no = #{snsBoardNo}
	</select>
	
	<!-- sns게시물 색상 조회 -->
	<select id="boardColorSelect" parameterType="String" resultType="String">
		SELECT color.color_value
		FROM sns_board
		JOIN sns_color
		ON sns_board.sns_board_no = sns_color.sns_board_no
		JOIN color
		ON color.color_no = sns_color.color_no 
		WHERE sns_board.sns_board_no = #{snsBoardNo}
	</select>
	
	<!-- sns게시물 스타일 조회 -->
	<select id="boardStyleSelect" parameterType="String" resultType="String">
		SELECT style.style_value
		FROM sns_board
		JOIN sns_style
		ON sns_board.sns_board_no = sns_style.sns_board_no
		JOIN style
		ON style.style_no = sns_style.style_no 
		WHERE sns_board.sns_board_no = #{snsBoardNo}
	</select>
	
	<!-- sns게시물 상세 보기 -->
	<select id="boardDetail" parameterType="String" resultMap="board">
		SELECT 
			sns_board.sns_board_no 
			,sns_board.user_id
			,nick
			,sns_board.sns_board_img 
			,sns_board.sns_board_content 
			,sns_board.sns_board_weather 
			,sns_board.sns_board_tall 
			,sns_board.sns_board_size 
			,sns_board.sns_board_loc 
			,sns_board.sns_board_date 
			,sns_board.sns_board_gender 
			,sns_board.sns_board_age 
			,댓글수 AS snsCommentCount 
			,추천수 AS snsLikeCount 
		From sns_board 
			,( 
			SELECT 
				b.sns_board_no 
				,count(c.sns_comment_no) 댓글수 
			FROM sns_board b 
			LEFT JOIN sns_comment c 
			ON c.sns_board_no = b.sns_board_no 
			GROUP BY b.sns_board_no 
			) AS cc 
			,( 
			SELECT 
				b.sns_board_no 
				,count(l.sns_like_no) 추천수
			FROM sns_board b 
			LEFT JOIN sns_like l 
			ON l.sns_board_no = b.sns_board_no 
			GROUP BY b.sns_board_no 
			) AS lc 
			,(
			SELECT user.user_nick as nick, s.sns_board_no
			FROM user
			RIGHT JOIN sns_board s
			ON user.user_id = s.user_id
			) AS u
		WHERE sns_board.sns_board_no = #{snsBoardNo} 
		AND sns_board.sns_board_no = cc.sns_board_no 
		AND sns_board.sns_board_no = lc.sns_board_no
		AND sns_board.sns_board_no = u.sns_board_no
	</select>
	
	<!-- sns게시물 수 조회 -->
	<select id="boardCount" resultType="int">
        SELECT COUNT(*) FROM sns_board
    </select>
	
	<!-- sns게시물 목록 조회 -->
	<select id="boardList" parameterType="java.util.Map" resultMap="board">
		 SELECT 
		 	sns_board.sns_board_no 
		 	,sns_board.sns_board_img 
		 	,sns_board.sns_board_date 
		 	,댓글수 AS snsCommentCount 
		 	,추천수 AS snsLikeCount 
		 FROM sns_board 
		  	,(
		  	SELECT 
		  		b.sns_board_no 
		  		,count(c.sns_comment_no) 댓글수 
		 	FROM sns_board b 
		 	LEFT JOIN sns_comment c 
		 	ON c.sns_board_no = b.sns_board_no 
		 	GROUP BY b.sns_board_no 
		 	) AS cc 
		 	,(
		 	SELECT 
		 		b.sns_board_no 
		 		,count(l.sns_like_no) 추천수 
		 	FROM sns_board b 
		 	LEFT JOIN sns_like l 
		 	ON l.sns_board_no = b.sns_board_no 
		 	GROUP BY b.sns_board_no 
		 	) AS lc 
		 WHERE sns_board.sns_board_no = cc.sns_board_no 
		 AND sns_board.sns_board_no = lc.sns_board_no 
		 <if test="popularity == 1">
		 	<!-- AND sns_board.sns_board_date = date(now())  -->
		 	ORDER BY snsLikeCount DESC 
		 </if>
		 <if test="popularity == 0">
		 	ORDER BY sns_board.sns_board_no DESC 
		 </if>
		 LIMIT #{beginRow}, #{pagePerRow}
	</select>

	<!-- sns게시물 상황별 분류 입력 -->
	<insert id="SnsSituationInsert" parameterType="java.util.Map">
		INSERT INTO sns_situation(
 		sns_situation_no
 		,sns_board_no
 		,situation_no
 		)
 		VALUES(
 		#{snsSituationNo}
 		,#{snsBoardNo}
 		,#{situationNo}
 		)
	</insert>

	<!-- sns게시물 스타일 입력 -->
	<insert id="SnsStyleInsert" parameterType="java.util.Map">
		INSERT INTO sns_style(
 		sns_style_no
 		,sns_board_no
 		,style_no
 		)
 		VALUES(
 		#{snsStyleNo}
 		,#{snsBoardNo}
 		,#{styleNo}
 		)
	</insert>

	<!-- sns게시물 색상 입력 -->
	<insert id="SnsColorInsert" parameterType="java.util.Map">
		INSERT INTO sns_color(
 		sns_color_no
 		,sns_board_no
 		,color_no
 		)
 		VALUES(
 		#{snsColorNo}
 		,#{snsBoardNo}
 		,#{colorNo}
 		)
	</insert>

	<!-- 가장 최근에 입력된 게시물 상황별 분류 번호 가져오기 -->
	<select id="getLastSituationNo" resultType="String">
		SELECT
			max(CAST(substring(sns_situation_no,15) AS DECIMAL))  
		FROM sns_situation
	</select>

	<!-- 가장 최근에 입력된 게시물 스타일 번호 가져오기 -->
	<select id="getLastStyleNo" resultType="String">
		SELECT
			max(CAST(substring(sns_style_no,11) AS DECIMAL))  
		FROM sns_style
	</select>

	<!-- 가장 최근에 입력된 게시물 색상 번호 가져오기 -->
	<select id="getLastColorNo" resultType="String">
		SELECT
			max(CAST(substring(sns_color_no,11) AS DECIMAL))  
		FROM sns_color
	</select>

	<!-- sns게시물 등록 -->
	<insert id="boardInsert" parameterType="com.ksmart.harulook.board.service.BoardDto">
		INSERT INTO sns_board(
			sns_board_no
			,user_id
			,sns_board_img
			,sns_board_content
			,sns_board_weather
			,sns_board_tall
	 		,sns_board_size
	 		,sns_board_loc
	 		,sns_board_date
	 		,sns_board_gender
	 		,sns_board_age
	 	)
	 	VALUES(
	 		#{snsBoardNo}
	 		,#{userId}
	 		,#{snsBoardImg}
	 		,#{snsBoardContent}
		 	,#{snsBoardWeather}
		 	,#{snsBoardTall}
		 	,#{snsBoardSize}
		 	,#{snsBoardLoc}
		 	,date(now())
		 	,#{snsBoardGender}
		 	,#{snsBoardAge}
	 	)
	</insert>
	
	<!-- 가장 최근에 입력된 게시물 번호 가져오기 -->
	<select id="getLastBoardNo" resultType="String">
		SELECT
			max(CAST(substring(sns_board_no,11) AS DECIMAL))  
		FROM sns_board
	</select>
	
</mapper>